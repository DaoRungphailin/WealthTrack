version: "3.8"
services:
  node-server:
    env_file: 
      - ./.env
    build:
      context: ./backend/V0.2/
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
        - APP_PORT=${APP_PORT}
        - APP_DOMAIN=${APP_DOMAIN}
    container_name: ${APP_DOMAIN}_prod
    ports:
      - "0.0.0.0:${APP_PORT}:${APP_PORT}"
    volumes:
      - uploads_data:/usr/src/${APP_DOMAIN}/uploads
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
      restart_policy:
        condition: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - prod_network

  postgres:
    image: postgres:15-alpine
    container_name: postgres_prod
    env_file: 
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G
      restart_policy:
        condition: unless-stopped
    networks:
      - prod_network

  redis:
    image: redis:alpine
    container_name: redis_prod
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: unless-stopped
    networks:
      - prod_network

volumes:
  uploads_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  prod_network:
    driver: bridge
    internal: true  # Only internal communication between containers
