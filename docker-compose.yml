version: "3.8"

services:
  node-server:
    build:
      context: ./backend/V0.2
      args:
        NODE_ENV: ${NODE_ENV}
    container_name: node-container
    env_file: 
      - ./.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "9229:9229"
    volumes:
      - /usr/src/WealthTrack/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: no
    networks:
      - app_network

  postgres:
    image: postgres:15
    container_name: postgres_container
    env_file: 
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - app_network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:8.13
    restart: always
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app_network

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/db
    depends_on:
      - redis
    restart: always
    networks:
      - app_network


volumes:
  postgres_data:
  redis_data:
  redisinsight_data:

networks:
  app_network:
    driver: bridge
