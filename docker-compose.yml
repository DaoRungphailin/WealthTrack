version: "3.8"

services:
  node-server:
    build:
      context: ./backend/V0.2
      args:
        NODE_ENV: development
    container_name: node-container
    env_file: 
      - ./.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "9229:9229"
    volumes:
      - ./frontend/build:/usr/src/app/frontend_build
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: always
    networks:
      - app_network

  postgres:
    image: postgres:15
    container_name: postgres_container
    env_file: 
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - app_network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge