# Use node:20-alpine as the base image
FROM node:20-alpine

# Set up the environment variables - these rarely change
ARG APP_DOMAIN
ARG APP_PORT
ARG NODE_ENV

# Install system dependencies - rarely changes
RUN apk update && apk add --no-cache curl

# Optional: create a non-root user for security reasons
# RUN addgroup -S appgroup && adduser -S appuser -G appgroup
# USER appuser

# Set the working directory inside the container
WORKDIR /usr/src/${APP_DOMAIN}

# Copy package files - changes somewhat frequently, but less than code
# Keep these before copying code to leverage cache when only code changes
COPY package*.json ./

# Install dependencies - only reruns if package files change
RUN npm ci --only=production

# Copy static assets and SQL files - change occasionally
# Order based on change frequency (less frequent first)
COPY sql ./sql
COPY statics ./statics

# Copy the already built dist directory - changes most frequently
# Put this last to maximize cache usage for previous layers
COPY dist ./dist


# Expose the application port
EXPOSE ${APP_PORT}

# Start the application (will be overridden by docker-compose if needed)
CMD ["npm", "run", "start"]
