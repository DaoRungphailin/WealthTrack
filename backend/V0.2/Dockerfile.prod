# Build Stage
FROM node:20-bullseye-slim AS builder
ARG APP_DOMAIN
WORKDIR /usr/src/${APP_DOMAIN}

# Copy directories that are relative to the build context (./backend/V0.2/)
COPY statics ./statics
COPY sql ./sql

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production

# Copy the already built dist directory (assumes it was created by npm run build)
COPY dist ./dist

# Final Stage
FROM node:20-alpine

ARG APP_DOMAIN
ARG APP_PORT
ENV NODE_ENV=production

RUN apk add --no-cache curl && \
    addgroup -S appgroup && \
    adduser -S appuser -G appgroup

WORKDIR /usr/src/${APP_DOMAIN}

# Copy everything from the builder stage
COPY --from=builder --chown=appuser:appgroup . .

RUN mkdir -p uploads && chown -R appuser:appgroup uploads

USER appuser

EXPOSE ${APP_PORT}

HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${APP_PORT}/health || exit 1

CMD ["npm", "run", "start"]
