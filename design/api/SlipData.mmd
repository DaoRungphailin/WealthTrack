%%{
    init: {
        "theme":"base",
        "themeVariables": {
            "fontFamily": "system-ui",
            'labelBoxBorderColor': '#ff0000'
        },
        "sequence": { 
            "wrap": true, 
            "width": 202 
        } 
    }
}%%
sequenceDiagram
    Actor Client
    participant Router as ThirdPartyAPIRouter
    participant Cont as ThirdPartyAPIController
    participant ApiClient as ExternalAPIServiceExternalAPIService
    Actor Api as EasySlipApi
    %% EASYSLIP_API document = "https://developer.easyslip.com/document"

    %% add EASYSLIP_API_URL = "https://developer.easyslip.com/api/v1"<br>to .env
    %% add EASYSLIP_API_KEY from Easy api to .env
    
    ApiClient->>ApiClient: load EASYSLIP_API_URL from .env
    ApiClient->>ApiClient: load EASYSLIP_API_KEY from .env
    Client->>Router: POST /slip/
    Router->>Cont: extract_slip_data(image)
    Cont->>Cont: verify if image was attached
    opt image not found
        Cont-->>Router: throw error "slip image not found"
        Router->>Client: 400, "slip image not found"
    end
    Cont->>Cont: this.checkSlipApiAvailability()
    opt if data.status == "available"
    Cont->>ApiClient: verify_slip(base64Image)
    ApiClient->>ApiClient: add EASYSLIP_API_KEY from .env to Header
    ApiClient->>Api: POST /verify
    end 
    opt API unavailable
        Api-->>ApiClient: 500, any error
        ApiClient-->>Cont: throw error 
        Cont-->>Router: next(ApiError(error)) 
        Router->>Client: 503, "API service unavailable"
    end
    Api->>ApiClient: Return slip information object
    opt any error
        ApiClient-->>Cont: throw error
        Cont-->>Router: throw error 
        Router-->>Client: 500, "internal server error"
    end
    ApiClient->>Cont: Return slip information object
    Cont->>Router: return slip information object
    Router->>Client: 200, "extract slip data successful",data: {"slipInfo":slipInfoObject}