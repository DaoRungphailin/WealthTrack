sequenceDiagram
    participant Client
    participant Sec as Security
    participant UserRouter as UserRouter
    participant BaseCont as BaseController
    participant UserCont as UserController extends<br> BaseController
    participant MongoObject as MongoObject
    participant BaseModel as BaseModel extends<br> MongoObject
    participant Model as UserModel extends<br> BaseModel

    %% Delete User
    Client->>UserRouter: DELETE /users/:userId (deleteUserById)
    UserRouter->>UserCont: deleteUser(req, res, next)
    Note over UserCont: this method was defined in read.mmd
    UserCont->>UserCont: this.getCurrentUser(req)
    opt user not found
        UserCont-->>UserRouter: throw NotFoundError('User not found')
        UserRouter-->>Client: 404, "User not found"
    end
    UserCont->>UserCont: Destructoring req.body
    opt currentPassword is not in req.body
        UserCont-->>UserRouter: throw BadRequestError('currentPassword is required')
        UserRouter-->>Client: 400, "currentPassword is required"
    end
    UserCont->>Model: checkPassword(user.username, currentPassword)
    opt Invalid password
        Model-->>UserCont: return false
        UserCont-->>UserRouter: throw PasswordError()
        UserRouter-->>Client: 401, "Invalid username or password"
    end
    Model-->>UserCont: return true
    UserCont->>BaseModel: deleteById(userId)
    BaseModel-->>UserCont: Deleted user
    UserCont-->>UserRouter: User deleted successfully
    UserRouter-->>Client: 200, "User deleted successfully", { userId: deletedUser._id }